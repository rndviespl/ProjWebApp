// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjWebApp.Data;

#nullable disable

namespace ProjWebApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241020211715_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProjWebApp.Models.Attribute1", b =>
                {
                    b.Property<int>("AttributesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AttributesId"));

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Size")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("AttributesId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Color" }, "idx_Attributes_Color");

                    b.HasIndex(new[] { "Size" }, "idx_Attributes_Size");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("ProjWebApp.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "idx_Cart_UserId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("CartItemId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CartId" }, "idx_CartItem_CartId");

                    b.HasIndex(new[] { "ProductId" }, "idx_CartItem_ProductId");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryTitle")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ParentCategoryId" }, "fk_ParentCategory");

                    b.HasIndex(new[] { "CategoryTitle" }, "idx_Category_Title");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.Discount", b =>
                {
                    b.Property<int>("Bro2testDiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bro2test_DiscountId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Bro2testDiscountId"));

                    b.Property<string>("Bro2testDiscountCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bro2test_DiscountCode");

                    b.Property<int>("Bro2testDiscountPercent")
                        .HasColumnType("int")
                        .HasColumnName("bro2test_DiscountPercent");

                    b.Property<DateTime>("Bro2testEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("bro2test_EndDate");

                    b.Property<DateTime>("Bro2testStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("bro2test_StartDate");

                    b.HasKey("Bro2testDiscountId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Bro2testDiscountCode" }, "bro2test_DiscountCode")
                        .IsUnique();

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<byte[]>("ImagePath")
                        .IsRequired()
                        .HasColumnType("blob");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ImageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "fk_bro2test_Image_bro2test_Product1_idx");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "idx_Notification_UserId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("DateTimeOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('новый','в обработке','завершен','отменен')")
                        .HasDefaultValueSql("'новый'");

                    b.Property<string>("TypeOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('веб-сайт','касса','WB')")
                        .HasDefaultValueSql("'касса'");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "idx_Order_UserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.OrderComposition", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceAtOrder")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<sbyte>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("ProductId", "OrderId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "OrderId" }, "idx_OrderComposition_OrderId");

                    b.HasIndex(new[] { "ProductId" }, "idx_OrderComposition_ProductId");

                    b.ToTable("OrderComposition", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.OrderHistory", b =>
                {
                    b.Property<int>("OrderHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrderHistoryId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("enum('новый','в обработке','завершен','отменен')");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("OrderHistoryId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrderId" }, "idx_OrderHistory_OrderId");

                    b.ToTable("OrderHistory", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("DiscountPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Wbarticul")
                        .HasColumnType("int")
                        .HasColumnName("WBArticul");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoryId" }, "idx_Product_CategoryId");

                    b.HasIndex(new[] { "Title" }, "idx_Product_Title");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.ProductAttribute", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("AttributesId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ProductId", "AttributesId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "AttributesId" }, "idx_Product_Attributes_AttributesId");

                    b.ToTable("Product_Attributes", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.Return", b =>
                {
                    b.Property<int>("ReturnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ReturnId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("ReturnDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ReturnId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrderId" }, "idx_Return_OrderId");

                    b.HasIndex(new[] { "ProductId" }, "idx_Return_ProductId");

                    b.ToTable("Return", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.Review", b =>
                {
                    b.Property<int>("Bro2testReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bro2test_ReviewId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Bro2testReviewId"));

                    b.Property<string>("Bro2testComment")
                        .HasColumnType("text")
                        .HasColumnName("bro2test_Comment");

                    b.Property<DateTime>("Bro2testDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bro2test_DateTime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Bro2testProductId")
                        .HasColumnType("int")
                        .HasColumnName("bro2test_ProductId");

                    b.Property<sbyte>("Bro2testRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("bro2test_Rating");

                    b.Property<int>("Bro2testUserId")
                        .HasColumnType("int")
                        .HasColumnName("bro2test_UserId");

                    b.HasKey("Bro2testReviewId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Bro2testProductId" }, "idx_Review_ProductId");

                    b.HasIndex(new[] { "Bro2testUserId" }, "idx_Review_UserId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "bro2test_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "bro2test_Username")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.ViewHistory", b =>
                {
                    b.Property<int>("ViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ViewId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ViewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ViewId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "idx_ViewHistory_ProductId");

                    b.HasIndex(new[] { "UserId" }, "idx_ViewHistory_UserId");

                    b.ToTable("ViewHistory", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.Wishlist", b =>
                {
                    b.Property<int>("WishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WishlistId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("WishlistId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "idx_Wishlist_ProductId");

                    b.HasIndex(new[] { "UserId" }, "idx_Wishlist_UserId");

                    b.ToTable("Wishlist", (string)null);
                });

            modelBuilder.Entity("ProjWebApp.Models.Cart", b =>
                {
                    b.HasOne("ProjWebApp.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Cart_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjWebApp.Models.CartItem", b =>
                {
                    b.HasOne("ProjWebApp.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_CartItem_Cart");

                    b.HasOne("ProjWebApp.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_CartItem_Product");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjWebApp.Models.Image", b =>
                {
                    b.HasOne("ProjWebApp.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("bro2test_Product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjWebApp.Models.Notification", b =>
                {
                    b.HasOne("ProjWebApp.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Notification_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjWebApp.Models.OrderComposition", b =>
                {
                    b.HasOne("ProjWebApp.Models.Order", "Order")
                        .WithMany("OrderCompositions")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("OrderComposition_ibfk_2");

                    b.HasOne("ProjWebApp.Models.Product", "Product")
                        .WithMany("OrderCompositions")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("OrderComposition_ibfk_1");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjWebApp.Models.OrderHistory", b =>
                {
                    b.HasOne("ProjWebApp.Models.Order", "Order")
                        .WithMany("OrderHistories")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_OrderHistory_Order");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ProjWebApp.Models.Product", b =>
                {
                    b.HasOne("ProjWebApp.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("bro2test_FK_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProjWebApp.Models.ProductAttribute", b =>
                {
                    b.HasOne("ProjWebApp.Models.Attribute1", "Attributes")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("AttributesId")
                        .IsRequired()
                        .HasConstraintName("Product_Attributes_ibfk_2");

                    b.HasOne("ProjWebApp.Models.Product", "Product")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("Product_Attributes_ibfk_1");

                    b.Navigation("Attributes");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjWebApp.Models.Return", b =>
                {
                    b.HasOne("ProjWebApp.Models.Order", "Order")
                        .WithMany("Returns")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Return_Order");

                    b.HasOne("ProjWebApp.Models.Product", "Product")
                        .WithMany("Returns")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Return_Product");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjWebApp.Models.ViewHistory", b =>
                {
                    b.HasOne("ProjWebApp.Models.Product", "Product")
                        .WithMany("ViewHistories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ViewHistory_Product");

                    b.HasOne("ProjWebApp.Models.User", "User")
                        .WithMany("ViewHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ViewHistory_User");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjWebApp.Models.Wishlist", b =>
                {
                    b.HasOne("ProjWebApp.Models.Product", "Product")
                        .WithMany("Wishlists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Wishlist_Product");

                    b.HasOne("ProjWebApp.Models.User", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Wishlist_User");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjWebApp.Models.Attribute1", b =>
                {
                    b.Navigation("ProductAttributes");
                });

            modelBuilder.Entity("ProjWebApp.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("ProjWebApp.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProjWebApp.Models.Order", b =>
                {
                    b.Navigation("OrderCompositions");

                    b.Navigation("OrderHistories");

                    b.Navigation("Returns");
                });

            modelBuilder.Entity("ProjWebApp.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Images");

                    b.Navigation("OrderCompositions");

                    b.Navigation("ProductAttributes");

                    b.Navigation("Returns");

                    b.Navigation("ViewHistories");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("ProjWebApp.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Notifications");

                    b.Navigation("ViewHistories");

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
