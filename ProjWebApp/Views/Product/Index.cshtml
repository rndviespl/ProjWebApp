@model IEnumerable<ProjWebApp.Models.Product>

@{
    ViewData["Title"] = "Product Catalog";
}

<h1>Product Catalog</h1>

<div class="row">
    @foreach (var product in Model)
    {
        <div class="col-md-4">
            <div class="card mb-4 shadow-sm">
                @if (product.Images != null && product.Images.Any())
                {
                    <img src="@Url.Content(product.Images.First().ImagePath)" alt="@product.Title" class="card-img-top" style="height: 225px; object-fit: cover;">
                }
                else
                {
                    <img src="~/images/default.png" alt="No Image" class="card-img-top" style="height: 225px; object-fit: cover;">
                }

                <div class="card-body">
                    <h5 class="card-title">@product.Title</h5>
                    <p class="card-text">Price: @product.Price.ToString("C")</p>
                    <p class="card-text">Discount: @product.DiscountPercent% off</p>
                    <p class="card-text">@Html.Raw(product.Description)</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="btn-group">
                            <a asp-action="Details" asp-route-id="@product.ProductId" class="btn btn-primary">View Details</a>

                            <form asp-action="AddToCart" method="post" class="ml-2" id="addToCartForm_@product.ProductId">
                                <input type="hidden" name="productId" value="@product.ProductId" />
                                <input type="hidden" name="userId" value="@ViewBag.CurrentUserId" />
                                <input type="number" name="quantity" value="1" min="1" class="form-control text-center mx-1" id="quantityInput_@product.ProductId" style="width: 60px;" />
                                <button type="submit" class="btn btn-success ml-2">Add to Cart</button>
                            </form>

                            <script>
                                document.getElementById('addToCartForm_@product.ProductId').addEventListener('submit', function (event) {
                                    event.preventDefault(); // Prevent the default form submission

                                    var formData = new FormData(this);

                                    fetch(this.action, {
                                        method: 'POST',
                                        body: formData
                                    })
                                        .then(response => {
                                            if (!response.ok) {
                                                throw new Error('Сетевая ошибка: ' + response.status);
                                            }
                                            return response.json();
                                        })
                                        .then(data => {
                                            if (data.success) {
                                                alert(data.message);
                                                // Здесь можно обновить счетчик корзины или другие элементы на странице
                                            } else {
                                                window.location.href = data.redirectUrl; // Перенаправление на страницу авторизации
                                            }
                                        })
                                        .catch(error => {
                                            console.error('Ошибка:', error);
                                            alert("Произошла ошибка: " + error.message);
                                        });

                                });
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
